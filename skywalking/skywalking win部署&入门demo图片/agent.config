# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The agent namespace 代理名称空间
# agent.namespace=${SW_AGENT_NAMESPACE:default-namespace}

# The service name in UI 用户界面中的服务名称
agent.service_name=${SW_AGENT_NAME:Your_ApplicationName}

# The number of sampled traces per 3 seconds 每3秒采样的痕迹数
# Negative or zero means off, by default 负数或零表示关闭，默认情况下
# agent.sample_n_per_3_secs=${SW_AGENT_SAMPLE:-1}

# Authentication active is based on backend setting, see application.yml for more details. 有效的身份验证基于后端设置，有关更多详细信息，请参见application.yml。
# agent.authentication = ${SW_AGENT_AUTHENTICATION:xxxx}

# The max amount of spans in a single segment. 单段中的最大跨度。
# Through this config item, SkyWalking keep your application memory cost estimated. 通过此配置项目，SkyWalking可以估算您的应用程序内存成本。
# agent.span_limit_per_segment=${SW_AGENT_SPAN_LIMIT:150}

# Ignore the segments if their operation names end with these suffix. 如果段的操作名称以这些后缀结尾，则忽略这些段。
# agent.ignore_suffix=${SW_AGENT_IGNORE_SUFFIX:.jpg,.jpeg,.js,.css,.png,.bmp,.gif,.ico,.mp3,.mp4,.html,.svg}

# If true, SkyWalking agent will save all instrumented classes files in `/debugging` folder. 如果为true，SkyWalking代理会将所有检测到的类文件保存在“ debugging”文件夹中。
# SkyWalking team may ask for these files in order to resolve compatible problem. SkyWalking团队可能会要求提供这些文件以解决兼容问题。
# agent.is_open_debugging_class = ${SW_AGENT_OPEN_DEBUG:true}

# If true, SkyWalking agent will cache all instrumented classes files to memory or disk files (decided by class cache mode),
# allow other javaagent to enhance those classes that enhanced by SkyWalking agent. 如果为true，则SkyWalking代理会将所有检测到的类文件缓存到内存或磁盘文件中（由类缓存模式决定），允许其他javaagent增强那些由SkyWalking代理增强的类。
# agent.is_cache_enhanced_class = ${SW_AGENT_CACHE_CLASS:false}

# The instrumented classes cache mode: MEMORY or FILE
# MEMORY: cache class bytes to memory, if instrumented classes is too many or too large, it may take up more memory
# FILE: cache class bytes in `/class-cache` folder, automatically clean up cached class files when the application exits
# 检测的类缓存模式：MEMORY或FILE MEMORY：将检测的类字节缓存到内存中，如果检测的类太多或太大，则可能占用更多的内存FILE：`class-cache`文件夹中的缓存类字节，自动清除缓存应用程序退出时的类文件
# agent.class_cache_mode = ${SW_AGENT_CLASS_CACHE_MODE:MEMORY}

# The operationName max length
# Notice, in the current practice, we don't recommend the length over 190.
# operationName max length注意，在当前实践中，我们不建议将长度超过190。
# agent.operation_name_threshold=${SW_AGENT_OPERATION_NAME_THRESHOLD:150}

# If true, skywalking agent will enable profile when user create a new profile task. Otherwise disable profile.
# 如果为true，则当用户创建新的配置文件任务时，天桥代理将启用配置文件。否则禁用配置文件。
# profile.active=${SW_AGENT_PROFILE_ACTIVE:true}

# Parallel monitor segment count 并行监控器段数
# profile.max_parallel=${SW_AGENT_PROFILE_MAX_PARALLEL:5}

# Max monitor segment time(minutes), if current segment monitor time out of limit, then stop it.
# 最大监视器段时间（分钟），如果当前段监视器时间超出限制，则将其停止。
# profile.duration=${SW_AGENT_PROFILE_DURATION:10}

# Max dump thread stack depth
# 最大转储线程堆栈深度
# profile.dump_max_stack_depth=${SW_AGENT_PROFILE_DUMP_MAX_STACK_DEPTH:500}

# Snapshot transport to backend buffer size
# 快照传输到后端缓冲区的大小
# profile.snapshot_transport_buffer_size=${SW_AGENT_PROFILE_SNAPSHOT_TRANSPORT_BUFFER_SIZE:50}

# Backend service addresses.
# skywalking服务地址
collector.backend_service=${SW_AGENT_COLLECTOR_BACKEND_SERVICES:127.0.0.1:11800}

# Logging file_name 日志名
logging.file_name=${SW_LOGGING_FILE_NAME:skywalking-api.log}

# Logging level 日志等级
logging.level=${SW_LOGGING_LEVEL:INFO}

# Logging dir 地址目录
# logging.dir=${SW_LOGGING_DIR:""}

# Logging max_file_size, default: 300 * 1024 * 1024 = 314572800 记录max_file_size，默认值：300 1024 1024 = 314572800
# logging.max_file_size=${SW_LOGGING_MAX_FILE_SIZE:314572800}

# The max history log files. When rollover happened, if log files exceed this number,
# then the oldest file will be delete. Negative or zero means off, by default.
# 最大历史记录日志文件。发生翻转时，如果日志文件超过此数目，则最早的文件将被删除。默认情况下，负数或零表示关闭。
# logging.max_history_files=${SW_LOGGING_MAX_HISTORY_FILES:-1}

# Listed exceptions would not be treated as an error. Because in some codes, the exception is being used as a way of controlling business flow.
# Besides, the annotation named IgnoredException in the trace toolkit is another way to configure ignored exceptions.
# 列出的异常不会被视为错误。因为在某些代码中，异常被用作控制业务流程的一种方式。此外，跟踪工具包中名为IgnoredException的注释是配置被忽略异常的另一种方法。
# statuscheck.ignored_exceptions=${SW_STATUSCHECK_IGNORED_EXCEPTIONS:}

# The max recursive depth when checking the exception traced by the agent. Typically, we don't recommend setting this more than 10, which could cause a performance issue. Negative value and 0 would be ignored, which means all exceptions would make the span tagged in error status.
# statuscheck.max_recursive_depth=${SW_STATUSCHECK_MAX_RECURSIVE_DEPTH:1}

# Mount the specific folders of the plugins. Plugins in mounted folders would work.
# 挂载插件的特定文件夹。挂载文件夹中的插件可以使用。
plugin.mount=${SW_MOUNT_FOLDERS:plugins,activations}

# Exclude activated plugins
# 排除激活的插件
# plugin.exclude_plugins=${SW_EXCLUDE_PLUGINS:}

# mysql plugin configuration
# mysql插件配置
# plugin.mysql.trace_sql_parameters=${SW_MYSQL_TRACE_SQL_PARAMETERS:false}

# Kafka producer configuration
# Kafka生产者配置
# plugin.kafka.bootstrap_servers=${SW_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Match spring bean with regex expression for classname
# 将Spring bean与regex表达式进行类名匹配
# plugin.springannotation.classname_match_regex=${SW_SPRINGANNOTATION_CLASSNAME_MATCH_REGEX:}
